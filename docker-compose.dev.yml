services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - "./data/redis:/data"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z
    command: ["server", "/data", "--console-address", ":9001"]
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - "./data/minio:/data"
    environment:
      MINIO_ROOT_USER: "${S3_USER}"
      MINIO_ROOT_PASSWORD: "${S3_PASSWORD}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
  mc:
    image: minio/mc:RELEASE.2025-07-21T05-28-08Z
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: sh
    command: |
      -c '
      mc alias set minio http://minio:9000 ${S3_USER} ${S3_PASSWORD} &&
      mc mb minio/${S3_BUCKET} &&
      mc policy set public minio/${S3_BUCKET}
      '
    environment:
      S3_USER: "${S3_USER}"
      S3_PASSWORD: "${S3_PASSWORD}"
      S3_BUCKET: "${S3_BUCKET}"

  openobserve:
    image: public.ecr.aws/zinclabs/openobserve:v0.15.0-rc4-debug
    ports:
      - "5080:5080"
    environment:
      ZO_ROOT_USER_EMAIL: "admin@localhost.local"
      ZO_ROOT_USER_PASSWORD: "admin"

    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
